{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gptl-adf"
		},
		"gptl_session_data_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'gptl_session_data'"
		},
		"gptl_session_data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gptlsession.dfs.core.windows.net/"
		},
		"rest_api_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Pl_assingment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.name_val",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "act_set_append1",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "id",
										"value": {
											"value": "@item()['id']",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_set_append2",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "name",
										"value": {
											"value": "@item()['name']",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_set_append",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "city",
										"value": {
											"value": "@item()['city']",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "act_set_var-id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "id_list",
							"value": {
								"value": "@variables('id')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var_city",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "city_list",
							"value": {
								"value": "@variables('city')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var_name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "name_list",
							"value": {
								"value": "@variables('name')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"name_val": {
						"type": "array",
						"defaultValue": [
							{
								"id": "1",
								"name": "Ram Patil",
								"city": "pune"
							},
							{
								"id": "2",
								"name": "Rani jadhav",
								"city": "Loha"
							}
						]
					}
				},
				"variables": {
					"id": {
						"type": "Array"
					},
					"name": {
						"type": "Array"
					},
					"city": {
						"type": "Array"
					},
					"id_list": {
						"type": "Array"
					},
					"name_list": {
						"type": "Array"
					},
					"city_list": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session_3rd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_1 assign variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "learning azure DF",
				"activities": [
					{
						"name": "act_set_var_name",
						"description": "define variable",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "name",
							"value": {
								"value": "@variables('last_name')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var_last_nm",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_set_var_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_nm",
							"value": {
								"value": "@variables('last_name')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"name": {
						"type": "String"
					},
					"last_name": {
						"type": "String"
					},
					"last_nm": {
						"type": "String"
					},
					"first_name": {
						"type": "String"
					},
					"last-name": {
						"type": "Array"
					},
					"fname": {
						"type": "String"
					},
					"lname": {
						"type": "String"
					},
					"person_details": {
						"type": "String"
					},
					"age": {
						"type": "String"
					},
					"each_val": {
						"type": "String"
					},
					"name_lst": {
						"type": "Array"
					},
					"outer_list": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session_1st"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_set_var",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "name",
							"value": {
								"value": "@split(\n    concat(\n        string(split(pipeline().parameters.test, ',')[1]),',',\n        split(pipeline().parameters.test,',' )[2]),','\n    )\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var_id",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "id",
							"value": {
								"value": "@split(pipeline().parameters.test, ',')[0]",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"test": {
						"type": "string"
					}
				},
				"variables": {
					"name": {
						"type": "Array"
					},
					"id": {
						"type": "String"
					}
				},
				"folder": {
					"name": "session_3rd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_1st')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "learn azure DF",
				"activities": [
					{
						"name": "act_set_var_name",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "person_details",
							"value": {
								"value": "@pipeline().parameters.person",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var_first_name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_set_var_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "first_name",
							"value": {
								"value": "@split(split(variables('person_details'),' ')[0], '_')[0]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var_last_name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_set_var_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "last_name",
							"value": {
								"value": "@split(split(variables('person_details'),' ')[0],'_')[1]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_age",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_set_var_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "age",
							"value": {
								"value": "@split(variables('person_details'),' ' )[1]",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"person": {
						"type": "string"
					}
				},
				"variables": {
					"name": {
						"type": "String"
					},
					"person_details": {
						"type": "String"
					},
					"first_name": {
						"type": "String"
					},
					"last_name": {
						"type": "String"
					},
					"age": {
						"type": "String"
					}
				},
				"folder": {
					"name": "session_2nd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_act_fail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_if_cond",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(toUpper(pipeline().parameters.name_list),'PATIL')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "act_set_fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "please don't pass sirname",
										"errorCode": "105"
									}
								}
							]
						}
					},
					{
						"name": "act_set_var",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_if_cond",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "name",
							"value": {
								"value": "@pipeline().parameters.name_list",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"name_list": {
						"type": "string"
					}
				},
				"variables": {
					"name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "session_3rd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_act_filter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_set_filter1",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.name_list",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(toUpper(item()),'R' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_set_filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "r_list",
							"value": {
								"value": "@activity('act_set_filter1').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_filter2",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.name_list",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(toUpper(item()), 'M')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_set_filter2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "m_list",
							"value": {
								"value": "@activity('act_set_filter2').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_filter3",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.name_list",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(not(startswith(toUpper(item()) ,'R')),\nnot(startswith(toUpper(item()),'M')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_set_filter3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "other",
							"value": {
								"value": "@activity('act_set_filter3').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"name_list": {
						"type": "array"
					}
				},
				"variables": {
					"r_list": {
						"type": "Array"
					},
					"m_list": {
						"type": "Array"
					},
					"other": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session_3rd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_filter_assingment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_filter_pune",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.city_list",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(toLower(item()),'pune')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pune",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_filter_pune",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "list_pune",
							"value": {
								"value": "@activity('act_filter_pune').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_filter_mumbai",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.city_list",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(toLower(item()),'mumbai' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "other_filter",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.city_list",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(not(equals(toLower(item()),'pune')),\nnot(equals(toLower(item()),'mumbai')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "mumbai",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_filter_mumbai",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "list_mumbai",
							"value": {
								"value": "@activity('act_filter_mumbai').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "other_city",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "other_filter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "list_other",
							"value": {
								"value": "@activity('other_filter').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"city_list": {
						"type": "array"
					}
				},
				"variables": {
					"list_pune": {
						"type": "Array"
					},
					"list_mumbai": {
						"type": "Array"
					},
					"list_other": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session_3rd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_foreach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_value_foreach",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.val_lst",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "act_set_var",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "each_val",
										"value": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_if_condition",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(toLower(item()),'ram')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "act_set_var_append1",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "name_lst",
													"value": "Mhoan"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "act_set_var_append",
												"type": "AppendVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "name_lst",
													"value": {
														"value": "@item()",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "act_set_var_outerlist",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_value_foreach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "outer_list",
							"value": {
								"value": "@variables('name_lst')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"val_lst": {
						"type": "array"
					}
				},
				"variables": {
					"each_val": {
						"type": "String"
					},
					"name_lst": {
						"type": "Array"
					},
					"outer_list": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session_2nd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_set parameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_set_var_fname",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "fname",
							"value": {
								"value": "@split(pipeline().parameters.name,' ')[0]",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_set_var_lname",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "lname",
							"value": {
								"value": "@split(pipeline().parameters.name,' ')[1]",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"name": {
						"type": "string",
						"defaultValue": "Ram Patil"
					}
				},
				"variables": {
					"name": {
						"type": "String"
					},
					"first_name": {
						"type": "String"
					},
					"last-name": {
						"type": "Array"
					},
					"fname": {
						"type": "String"
					},
					"lname": {
						"type": "String"
					},
					"person_details": {
						"type": "String"
					},
					"last_name": {
						"type": "String"
					},
					"age": {
						"type": "String"
					},
					"each_val": {
						"type": "String"
					},
					"name_lst": {
						"type": "Array"
					},
					"outer_list": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session_1st"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_until')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_set_until",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(variables('var_test'),5 )",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "act_set_var1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_test",
										"value": {
											"value": "@add(variables('increment_test'),1 )",
											"type": "Expression"
										}
									}
								},
								{
									"name": "act_set_var2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "act_set_var1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "increment_test",
										"value": {
											"value": "@variables('var_test')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_test": {
						"type": "Integer",
						"defaultValue": 0
					},
					"increment_test": {
						"type": "Integer",
						"defaultValue": 0
					}
				},
				"folder": {
					"name": "session_2nd"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_web')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "act_web",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojson"
						}
					},
					{
						"name": "set_act_var",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "act_web",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "feature_lst",
							"value": {
								"value": "@activity('act_web').output.features",
								"type": "Expression"
							}
						}
					},
					{
						"name": "act_If_condition",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "set_act_var",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('act_web').output.metadata.count,length(variables('feature_lst'))))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "act_fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "api variable result count is not matching",
										"errorCode": "105"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"feature_lst": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "session_4th"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/gptl_session_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('gptl_session_data_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('gptl_session_data_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_api_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('rest_api_source_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/act_delete_gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gptl_session_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "gptl",
						"fileSystem": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/gptl_session_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gptl_session_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "emp.parquet",
						"folderPath": "target_loc",
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/gptl_session_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_gen2_storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gptl_session_data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/gptl_session_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_gen2_storage_metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gptl_session_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/gptl_session_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup_act')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gptl_session_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "EMPdata.csv",
						"folderPath": "gptl",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Dep_id",
						"type": "String"
					},
					{
						"name": "Dept",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/gptl_session_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest_api')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rest_api_source",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relative_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().relative_url",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rest_api_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest_api_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gptl_session_data",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rest_api_result",
						"fileSystem": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/gptl_session_data')]"
			]
		}
	]
}